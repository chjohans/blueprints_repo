blueprint:
  # Adapted from: https://github.com/gmlupatelli/blueprints_repo/blob/master/simple_weekly_scheduler/simple_weekly_scheduler.yaml
  name: Simple Weekly Scheduler
  description: Simple weekly scheduler to start/turn on and stop/turn off devices (e.g. lamps or switches).
  domain: automation
  source_url: https://github.com/chjohans/blueprints_repo/blob/master/simple_weekly_scheduler/simple_weekly_scheduler.yaml

  # Blueprint Inputs
  input:
    # In this segment the user will input the default values to start/turn on the automation. 
    default_run_on:
      name: Run start/turn on
      description: Choose if you wish to run start/turn on actions in your automation
      default: true
      selector:
        boolean:
    default_time_or_sun_on:
      name: Select what to use as the start/turn on
      description: Choose between a specific time, the sunrise or sunset to start/turn on
      default: Time
      selector:
        select:
          options:
            - Time
            - Sunrise
            - Sunset
    default_time_on:
      name: Default time to start/turn on trigger
      description: Select the default time to turn start/turn on
      default: '12:00:00'
      selector:
        time:
    default_sun_on_offset:
      name: Default sunrise or sunset start/turn on offset
      description: Select an offset to be used for the sunrise or sunset start/turn on
      default: '0'
      selector:
        number:
          min: -1440
          max: 1440
          mode: box
          unit_of_measurement : 'min'

    # In this segment the user will selected the actions that will be performed during the start/turn-on
    scheduled_action_on:
      name: Action start/turn on
      description: Select the start/turn on action(s) to run
      default: []
      selector:
        action: { }

    # In this segment the user will input the default values to stop/turn off the automation. 
    default_run_off:
      name: Run stop/turn off
      description: Choose if you wish to run stop/turn off actions in your automation
      default: true
      selector:
        boolean: 
    default_time_or_sun_off:
      name: Select what to use as the stop/turn off trigger
      description: Choose between a specific time, the sunrise or sunset to stop/turn off
      default: Time
      selector:
        select:
          options:
            - Time
            - Sunrise
            - Sunset
    default_time_off:
      name: Default time to stop/turn off
      description: Select the default time stop/turn off
      default: '00:00:00'
      selector:
        time:
    default_sun_off_offset:
      name: Default sunrise or sunset stop/turn off offset
      description: Select an offset to be used for the sunrise or sunset stop/turn off
      default: '0'
      selector:
        number:
          min: -1440
          max: 1440
          mode: box
          unit_of_measurement : 'min'
 
     # In this segment the user will selected the actions that will be performed during the stop/turn-off
    scheduled_action_off:
      name: Action start/turn off
      description: Select the stop/turn off action(s) to run
      default: []
      selector:
        action: { }

    # In this segment the user will selected the week days that te automation will be exectuted.
    # Monday
    monday_enabled:
      name: Monday
      default: true
      selector:
        boolean:

    # Tuesday
    tuesday_enabled:
      name: Tuesday
      default: true
      selector:
        boolean:
  
    # Wednesday
    wednesday_enabled:
      name: Wednesday
      default: true
      selector:
        boolean:
    
    # Thursday
    thursday_enabled:
      name: Thursday
      default: true
      selector:
        boolean:

    # Friday
    friday_enabled:
      name: Friday
      default: true
      selector:
        boolean:

    # Saturday
    saturday_enabled:
      name: Saturday
      default: true
      selector:
        boolean:

    # Sunday
    sunday_enabled:
      name: Sunday
      default: true
      selector:
        boolean:

# Variables used in the automation
variable:
  # Convert inputs to variable:
  default_time_on: !input 'default_time_on'
  default_sun_on_offset: !input 'default_sun_on_offset'
  
  default_time_off: !input 'default_time_off'
  default_sun_off_offset: !input 'default_sun_off_offset'

  monday_enabled: !input 'monday_enabled'
  tuesday_enabled: !input 'tuesday_enabled'
  wednesday_enabled: !input 'wednesday_enabled'
  thursday_enabled: !input 'thursday_enabled'
  friday_enabled: !input 'friday_enabled'
  saturday_enabled: !input 'saturday_enabled'
  sunday_enabled: !input 'sunday_enabled'

  current_day: '{{ now().weekday() | int }}'

  default_time_or_sun_on: !input 'default_time_or_sun_on'
  default_time_or_sun_off: !input 'default_time_or_sun_off'

  default_run_on: !input 'default_run_on'
  default_run_off: !input 'default_run_off'

# Triggers - This automation is triggered for all input options, and the conditions are used to define if the automation will run at that specific time
trigger:

  # Start / Turn-on triggers
  - platform: time
    at: default_time_on
    id: trigger_default_time_on
    
  - platform: sun
    event: sunrise
    offset: >-
        {{ '%02i:%02i:%02i' %(default_sun_on_offset/60, default_sun_on_offset%60,(60*default_sun_on_offset)%60) }}
    id: trigger_default_sunrise_on
    
  - platform: sun
    event: sunset
    offset: >-
        {{ '%02i:%02i:%02i' %(default_sun_on_offset/60, default_sun_on_offset%60, (60*default_sun_on_offset)%60) }} 
    id: trigger_default_sunset_on
 
  # Stop / Turn-off triggers
  - platform: time
    at: default_time_off
    id: trigger_default_time_off
    
  - platform: sun
    event: sunrise
    offset: >-
        {{ '%02i:%02i:%02i' %(default_sun_off_offset/60, default_sun_off_offset%60, (60*default_sun_off_offset)%60) }}
    id: trigger_default_sunrise_off
    
  - platform: sun
    event: sunset
    offset: >-
        {{ '%02i:%02i:%02i' %(default_sun_off_offset/60, default_sun_off_offset%60, (60*default_sun_off_offset)%60) }} 
    id: trigger_default_sunset_off

# Conditions used to determine if the automation should run for the specific trigger event
condition:

  # Check if the automation is supposed to be executed during that specific weekday
  - condition: template
    value_template: >-
        {{ 
          (current_day == 0 and monday_enabled) or 
          (current_day == 1 and tuesday_enabled) or 
          (current_day == 2 and wednesday_enabled) or
          (current_day == 3 and thursday_enabled) or 
          (current_day == 4 and friday_enabled) or
          (current_day == 5 and saturday_enabled) or
          (current_day == 6 and sunday_enabled)
        }}

  # Check if the specific time or sun trigger is supposed to be exectuted
  - condition: template
    value_template: >-
        {{ 
          (default_run_on and ((default_time_or_sun_on == 'Time' and trigger.id == 'trigger_default_time_on') or
          (default_time_or_sun_on == 'Sunrise' and trigger.id == 'trigger_default_sunrise_on') or
          (default_time_or_sun_on == 'Sunset' and trigger.id == 'trigger_default_sunset_on'))) or 
          (default_run_off and ((default_time_or_sun_off == 'Time' and trigger.id == 'trigger_default_time_off') or
          (default_time_or_sun_off == 'Sunrise' and trigger.id == 'trigger_default_sunrise_off') or
          (default_time_or_sun_off == 'Sunset' and trigger.id == 'trigger_default_sunset_off')))
        }}

# Actions
action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 'trigger_default_time_on'
        - condition: trigger
          id: 'trigger_default_sunrise_on'
        - condition: trigger
          id: 'trigger_default_sunset_on'
        sequence: !input scheduled_action_on
      - condition: or
        conditions:
        - condition: trigger
          id: 'trigger_default_time_off'
        - condition: trigger
          id: 'trigger_default_sunrise_off'
        - condition: trigger
          id: 'trigger_default_sunset_off'
        sequence: !input scheduled_action_off
    default: []

mode: single
max_exceeded: silent